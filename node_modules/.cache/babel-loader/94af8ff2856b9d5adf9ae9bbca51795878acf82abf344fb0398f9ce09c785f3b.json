{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\react-blog\\\\src\\\\components\\\\Features\\\\Category\\\\Category.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { getPostByCategory } from \"../../../redux/postsRedux\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport dateToStr from \"../../../utils/dateToStr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const categoryInPath = window.location.pathname.split(\"/\").filter(Boolean).pop();\n  const postsWithCategory = useSelector(state => getPostByCategory(state, categoryInPath));\n  const dateString = date => {\n    return dateToStr(date);\n  };\n  if (!postsWithCategory) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: categoryInPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts in this category...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: categoryInPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      sm: 2,\n      md: 3,\n      children: postsWithCategory.map(post => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Author: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this), post.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Published: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this), dateString(post.publishedDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Category: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this), post.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: post.shortDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              as: NavLink,\n              to: \"/post/\" + post.id,\n              children: \"Read more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(Category, \"pxvuwEl+rF364sMVNBJvmb3HHJ8=\", false, function () {\n  return [useSelector];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useSelector","getPostByCategory","Button","Card","Col","Row","NavLink","dateToStr","jsxDEV","_jsxDEV","Category","_s","categoryInPath","window","location","pathname","split","filter","Boolean","pop","postsWithCategory","state","dateString","date","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","sm","md","map","post","className","style","width","Body","Title","title","Text","author","publishedDate","category","shortDescription","variant","as","to","id","_c","$RefreshReg$"],"sources":["C:/Projects/react-blog/src/components/Features/Category/Category.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { getPostByCategory } from \"../../../redux/postsRedux\";\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport dateToStr from \"../../../utils/dateToStr\";\r\n\r\nconst Category = () => {\r\n  const categoryInPath = window.location.pathname\r\n    .split(\"/\")\r\n    .filter(Boolean)\r\n    .pop();\r\n  const postsWithCategory = useSelector((state) =>\r\n    getPostByCategory(state, categoryInPath)\r\n  );\r\n\r\n  const dateString = (date) => {\r\n    return dateToStr(date);\r\n  };\r\n\r\n  if (!postsWithCategory)\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Category: <span>{categoryInPath}</span>\r\n        </h2>\r\n        <p>No posts in this category...</p>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Category: <span>{categoryInPath}</span>\r\n        </h2>\r\n        <Row xs={1} sm={2} md={3}>\r\n          {postsWithCategory.map((post) => (\r\n            <Col key={post.id} className=\"mb-2\">\r\n              <Card style={{ width: \"100%\" }}>\r\n                <Card.Body>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Text>\r\n                    <p className=\"mb-0\">\r\n                      <span>Author: </span>\r\n                      {post.author}\r\n                    </p>\r\n                    <p className=\"mb-0\">\r\n                      <span>Published: </span>\r\n                      {dateString(post.publishedDate)}\r\n                    </p>\r\n                    <p className=\"mb-0\">\r\n                      <span>Category: </span>\r\n                      {post.category}\r\n                    </p>\r\n                    <br />\r\n                    <p className=\"mb-0\">{post.shortDescription}</p>\r\n                  </Card.Text>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    as={NavLink}\r\n                    to={\"/post/\" + post.id}\r\n                  >\r\n                    Read more\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    );\r\n};\r\nexport default Category;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}